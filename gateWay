//kotlin
@Service
interface KeycloakGateway {
    @RequestLine("GET /UserCrudFeignClientUser")
    fun getClientUserResource(): Response

    @RequestLine("GET /UserCrudFeignClientGroup")
    fun getClientGroupResource(): Response
}
----------------------------------------------
@FeignClient(value = "userCrudFeignClientGroup", url = "#{feignClientConfig.userCrudApiClientUrl}")
interface UserCrudFeignClientGroup : GroupApi {}
----------------------------------------------
@Configuration
class FeignClientConfig {
    @Value("\${app.userCrudApiClientUrl}")
    lateinit var userCrudApiClientUrl: String
}
----------------------------------------------
@Service
interface KeycloakGateway {
    @RequestLine("GET /UserCrudFeignClientGroup")
    fun getGroups(): List<GroupWithUsersDto>?

    @RequestLine("GET /UserCrudFeignClientGroup")
    fun getGroupData(groupId: UUID): GroupWithUsersDto?

    @RequestLine("GET /UserCrudFeignClientUser")
    fun getUserByName(nameUser: String): UserDto

    @RequestLine("GET /UserCrudFeignClientUser")
    fun getUserByUuid(userId: UUID): UserDto

    @RequestLine("GET /UserCrudFeignClientUser")
    fun joinGroup(userId: UUID, groupId: UUID): ResponseEntity<Void>

    @RequestLine("GET /UserCrudFeignClientUser")
    fun leaveGroup(userId: UUID, groupId: UUID): ResponseEntity<Void>

}
